// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  seed     = "ts-node prisma/seed/index.ts"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String   @id @default(uuid())
  first_name    String
  last_name     String
  email         String   @unique
  password      String
  balance       Float    @default(0)
  profile_image String?
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  //relational
  transactions TransactionHistory[]
}

model Banner {
  id           Int      @id @default(autoincrement())
  banner_name  String
  banner_image String
  description  String
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
}

model Service {
  service_code   String   @id
  service_name   String
  service_icon   String
  service_tariff Float
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
}

model TransactionHistory {
  id               String @id @default(uuid())
  user_id          String
  invoice_number   String
  transaction_type String
  description      String
  total_amount     Float

  created_on DateTime @default(now())

  //relational
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
}
